@model Foundation.Features.Setup.SetupViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en" class="@(PageEditing.PageIsInEditMode ? "editMode" : "")">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="author" content="">
    <title></title>
    <link rel="icon" href="~/Assets/icons/episerver.png" type="image/x-icon" />
    <link rel="shortcut icon" href="~/Assets/icons/episerver.png" type="image/x-icon" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.4.1/css/all.css" integrity="sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz" crossorigin="anonymous">
    <link href="~/Assets/scss/vendors/spur-admin/spur.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Assets/scss/main.min.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <main class="dash-content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card spur-card">
                        <div class="card-header">
                            <div class="spur-card-icon">
                                <i class="fas fa-desktop"></i>
                            </div>
                            <div class="spur-card-title"> @Html.TranslateFallback("Import Content", "Import Content")</div>
                        </div>
                        <div class="card-body">
                            @using (Html.BeginForm("Create", "Setup", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                <h5>Site</h5>
                                <div class="custom-control custom-radio">
                                    <input class="custom-control-input sites" type="radio" name="siteLocation" id="localSiteLocation" value="Local">
                                    <label class="custom-control-label" for="localSiteLocation">
                                        @Html.TranslateFallback("Local Site File", "Local Site File")
                                    </label>
                                </div>
                                <div class="custom-control custom-radio">
                                    <input class="custom-control-input sites" type="radio" name="siteLocation" id="remoteSiteLocation" value="Remote" checked="checked">
                                    <label class="custom-control-label" for="remoteSiteLocation">
                                        @Html.TranslateFallback("Remote Site File", "Remote Site File")
                                    </label>
                                </div>
                                <div id="localSiteDiv" class="form-group">
                                    <label for="SiteFile"> @Html.TranslateFallback("Import site episerverdata file", "Import site episerverdata file")</label>
                                    @Html.TextBoxFor(x => x.SiteFile, new { type = "file", name = "SiteFile", @class = "form-control-file" })
                                </div>
                                <div id="remoteSiteDiv" class="form-group">
                                    @Html.LabelFor(x => x.Sites)
                                    @Html.DropDownListFor(x => x.SiteName, Model.Sites, new { @class = "form-control" })
                                </div>

                                <h5>Catalog</h5>
                                <div class="custom-control custom-radio">
                                    <input class="custom-control-input catalogs" type="radio" name="catalogLocation" id="localCatalogLocation" value="Local">
                                    <label class="custom-control-label" for="localCatalogLocation">
                                        @Html.TranslateFallback("Local Catalog File", "Local Catalog File")
                                    </label>
                                </div>
                                <div class="custom-control custom-radio">
                                    <input class="custom-control-input catalogs" type="radio" name="catalogLocation" id="remoteCatalogLocation" value="Remote" checked="checked">
                                    <label class="custom-control-label" for="remoteCatalogLocation">
                                        @Html.TranslateFallback("Remote Catalog File", "Remote Catalog File")
                                    </label>
                                </div>
                                <div id="localCatalogDiv" class="form-group">
                                    <label for="catalogFile">@Html.TranslateFallback("Import catalog zip file", "Import catalog zip file")</label>
                                    @Html.TextBoxFor(x => x.CatalogFile, new { type = "file", name = "CatalogFile", @class = "form-control-file" })
                                </div>
                                <div id="remoteCatalogDiv" class="form-group">
                                    @Html.LabelFor(x => x.Catalogs)
                                    @Html.DropDownListFor(x => x.CatalogName, Model.Catalogs, new { @class = "form-control" })
                                </div>

                                <h5>Visitor Group</h5>
                                <div class="custom-control custom-radio">
                                    <input class="custom-control-input visitor-groups" type="radio" name="visitorGroupLocation" id="localVisitorGroupLocation" value="Local">
                                    <label class="custom-control-label" for="localVisitorGroupLocation">
                                        @Html.TranslateFallback("Local Visitor Group File", "Local Visitor Group File")
                                    </label>
                                </div>
                                <div class="custom-control custom-radio">
                                    <input class="custom-control-input visitor-groups" type="radio" name="visitorGroupLocation" id="remoteVisitorGroupLocation" value="Remote" checked="checked">
                                    <label class="custom-control-label" for="remoteVisitorGroupLocation">
                                        @Html.TranslateFallback("Remote Visitor Group File", "Remote Visitor Group File")
                                    </label>
                                </div>
                                <div id="localVisitorGroupDiv" class="form-group">
                                    <label for="catalogFile">@Html.TranslateFallback("Import visitor group zip file", "Import visitor group zip file")</label>
                                    @Html.TextBoxFor(x => x.VisitorGroupFile, new { type = "file", name = "VisitorGroupFile", @class = "form-control-file" })
                                </div>
                                <div id="remoteVisitorGroupDiv" class="form-group">
                                    @Html.LabelFor(x => x.VisitorGroups)
                                    @Html.DropDownListFor(x => x.VisitorGroupName, Model.VisitorGroups, new { @class = "form-control" })
                                </div>

                                <input type="submit" class="btn btn-primary" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script src="~/Assets/js/vendors/jquery/jquery-3.4.0.min.js" type="text/javascript"></script>
    <script src="~/Assets/js/vendors/popper/popper.min.js" type="text/javascript"></script>
    <script src="~/Assets/js/vendors/bootstrap-4.3.1/bootstrap.min.js" type="text/javascript"></script>
    <script src="~/Assets/js/vendors/spur-admin/spur.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(document).on("change", ".sites", siteChanged);
            $(document).on("change", ".catalogs", catalogChanged);
            $(document).on("change", ".visitor-groups", visitorGroupChanged);
            document.getElementById("localSiteDiv").style.display = "none";
            document.getElementById("localCatalogDiv").style.display = "none";
            document.getElementById("localVisitorGroupDiv").style.display = "none";
        });

        function siteChanged() {
            let selectedValue = $("input[name='siteLocation']:checked").val();
            let localDiv = document.getElementById("localSiteDiv");
            let remoteDiv = document.getElementById("remoteSiteDiv");
            localDiv.style.display = selectedValue === 'Local' ? "block" : "none";
            remoteDiv.style.display = selectedValue === 'Remote' ? "block" : "none";
        }

        function catalogChanged() {
            let selectedValue = $("input[name='catalogLocation']:checked").val();
            let localDiv = document.getElementById("localCatalogDiv");
            let remoteDiv = document.getElementById("remoteCatalogDiv");
            localDiv.style.display = selectedValue === 'Local' ? "block" : "none";
            remoteDiv.style.display = selectedValue === 'Remote' ? "block" : "none";
        }

        function visitorGroupChanged() {
            let selectedValue = $("input[name='visitorGroupLocation']:checked").val();
            let localDiv = document.getElementById("localVisitorGroupDiv");
            let remoteDiv = document.getElementById("remoteVisitorGroupDiv");
            localDiv.style.display = selectedValue === 'Local' ? "block" : "none";
            remoteDiv.style.display = selectedValue === 'Remote' ? "block" : "none";
        }
    </script>
</body>
</html>