@using Foundation.Features.MyAccount.CreditCard

@model CreditCardViewModel

@{
    Layout = "~/Features/MyAccount/_MyAccountLayout.cshtml";
}

<p>@Html.PropertyFor(model => model.CurrentContent.MainBody)</p>

@{
    if (Model.IsB2B)
    {
        Html.RenderAction("Index", "B2BNavigation");
    }
}
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div>@Model.ErrorMessage</div>
}
else
{
    using (Html.BeginForm("Save", "CreditCard", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <h3>
            @if (!string.IsNullOrEmpty(Model.CreditCard.CreditCardId))
            {
                @Html.TranslateFallback("/CreditCard/Edit/Header", "Edit")
            }
            else
            {
                @Html.TranslateFallback("/CreditCard/AddNew/Header", "Add new")
            }
        </h3>
        <br />

        <div class="form-group">
            @Html.LabelFor(x => x.CreditCard.CreditCardType)
            @Html.DropDownListFor(x => x.CreditCard.CreditCardType, Model.CreditCard.Types, new { @class = "select-menu" })
            @Html.ValidationMessageFor(x => x.CreditCard.CreditCardType)
        </div>

        <div class="form-row">
            <div class="form-group col-md-12 col-lg-6">
                @Html.LabelFor(x => x.CreditCard.CreditCardNumber)
                @Html.TextBoxFor(x => x.CreditCard.CreditCardNumber, new { @class = "textbox" })
                @Html.ValidationMessageFor(x => x.CreditCard.CreditCardNumber)
            </div>
            <div class="form-group col-md-12 col-lg-6">
                @Html.LabelFor(x => x.CreditCard.CreditCardSecurityCode)
                @Html.TextBoxFor(x => x.CreditCard.CreditCardSecurityCode, new { @class = "textbox", maxlength = "3" })
                @Html.ValidationMessageFor(x => x.CreditCard.CreditCardSecurityCode)
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(x => x.CreditCard.ExpirationMonth)
                @Html.DropDownListFor(x => x.CreditCard.ExpirationMonth, Model.CreditCard.Months, new { @class = "select-menu" })
                @Html.ValidationMessageFor(x => x.CreditCard.ExpirationMonth)
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(x => x.CreditCard.ExpirationYear)
                @Html.DropDownListFor(x => x.CreditCard.ExpirationYear, Model.CreditCard.Years, new { @class = "select-menu" })
                @Html.ValidationMessageFor(x => x.CreditCard.ExpirationYear)
            </div>
        </div>

        if (Model.CreditCard.CurrentContact == null) //Edit CC of organization or add new CC
        {
            if (Model.CreditCard.Organization != null) //Edit CC of organization
            {
                @Html.HiddenFor(x => x.CreditCard.Organization.OrganizationId)
                <div class="form-group col-md-6">
                    <div class="form-group">
                        <label>@Html.TranslateFallback("/B2B/Organization/Organization", "Organization")</label>
                        <br />
                        <div class="custom-select">
                            @Html.TextBoxFor(x => x.CreditCard.Organization.Name, new { disabled = "disabled", @class = "form-control" })
                        </div>
                    </div>
                </div>
            }
            else if (Model.IsB2B)
            {
                //Add new CC
                <div class="form-group col-md-6">
                    @{
                        @Html.LabelFor(x => x.CreditCard.Organization)
                        @Html.DropDownListFor(x => x.CreditCard.OrganizationId, new SelectList(Model.Organizations, "OrganizationId", "Name", Model.CreditCard.OrganizationId), new { @class = "select-menu--customed" })
                        @Html.ValidationMessageFor(x => x.CreditCard.Organization)
                    }
                </div>
            }
        }

        @Html.HiddenFor(x => x.CreditCard.CreditCardId)
        @Html.HiddenFor(x => x.IsB2B)

        if (!(bool)ViewData["IsReadOnly"])
        {
            <button type="submit" class="button-black">@Html.TranslateFallback("/Shared/Save", "Save")</button>
        }
        @Html.ActionLink(Html.TranslateFallback("/Shared/Cancel", "Cancel"), "Index", "CreditCard", null, new { @class = "button-transparent-black" })
    }
}