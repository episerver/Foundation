@using EPiServer.Commerce.Order
@using Foundation.Features.MyAccount.OrderHistory

@model OrderHistoryViewModel

@{
    Layout = null;
}

<div class="row">
    <div class="col-12">
        <div class="page-title">
            <h2>@Html.PropertyFor(x => (x.CurrentBlock as IContent).Name)</h2>
        </div>
        <p>@Html.PropertyFor(model => model.CurrentBlock.MainBody)</p>
        <div class="recent-orders">
            @if (Model.Orders != null && Model.Orders.Count > 0)
            {
                foreach (var order in Model.Orders)
                {
                    <div class="order__item">
                        <div class="row">
                            <div class="col-sm-6 col-xs-12">
                                <div class="order--box">
                                    <div class="title">
                                        <a class="account-link" href="@(Model.OrderDetailsPageUrl)?orderGroupId=@order.PurchaseOrder.OrderLink.OrderGroupId">#@order.PurchaseOrder.OrderNumber</a>
                                        <p class="sub-title">@order.PurchaseOrder.Created.ToString()</p>
                                    </div>

                                    <div class="content product-tile-list__content">
                                        <div>
                                            <label class="title">@Html.TranslateFallback("/OrderHistory/Labels/TotalPrice", "Price"): </label>
                                            <span class="price__discount">@order.PurchaseOrder.GetTotal().ToString()</span>
                                        </div>
                                        <div>
                                            <label class="title">@Html.TranslateFallback("/OrderHistory/Labels/Status", "Status"): </label>
                                            <span class="font-italic">@order.PurchaseOrder.OrderStatus</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xs-12">
                                <div class="order--box">
                                    <label class="title">@Html.TranslateFallback("/OrderHistory/Labels/ShippedTo", "Shipped")</label>
                                    @foreach (var shippingAddress in order.ShippingAddresses)
                                    {
                                        @Html.Partial("_Address", shippingAddress)
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 order--box">
                                @using (Html.BeginForm("SaveAsPaymentPlan", "OrderHistory", FormMethod.Post, new { @class = "order--form-group", data_container = "MiniCart" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("orderId", order.PurchaseOrder.OrderLink.OrderGroupId.ToString())
                                    @Html.DropDownListFor(x => x.CycleMode, Model.Modes, new { @class = "select-menu" })
                                    @Html.TextBoxFor(x => x.CycleLength, new { @class = "textbox", type = "number" })
                                    <button type="submit" role="button" class="button-black btn-lower" data-container="MiniCart">
                                        New Subscription
                                    </button>
                                }
                            </div>

                        </div>
                        <div class="row product--container">
                            <div class="col-12">
                                @using (Html.BeginForm("Reorder", "DefaultCart", FormMethod.Post, new { @class = "form-inline", data_container = "MiniCart" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("orderId", order.PurchaseOrder.OrderLink.OrderGroupId.ToString())
                                    <button type="submit" role="button" class="button-black btn-lower" data-container="MiniCart">
                                        <i data-feather="credit-card"></i>
                                        <span>@Html.TranslateFallback("/OrderHistory/Labels/Reorder", "Reorder")</span>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>The list is empty.</p>
            }
        </div>
    </div>
</div>