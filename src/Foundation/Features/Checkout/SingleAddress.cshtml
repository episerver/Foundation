@model CheckoutViewModel

<div class="row">
    <div class="col-12">
        <ul class="style-list-none">
            <li class="row">
                <div class="col-md-6 col-xs-12" id="shippingAddressSelection">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div>
                            <label class="checkbox">
                                @Html.TranslateFallback("/Checkout/Shipment/ExistingAddress", "Ship to existing address")
                                @Html.RadioButtonFor(x => x.ShippingAddressType, 1, new
                                {
                                    @class = "radio jsSingleAddress"
                                })
                                <span class="checkmark"></span>
                            </label>
                            <br />
                        </div>

                    }
                    <div>
                        <label class="checkbox">
                            @Html.TranslateFallback("/Checkout/Shipment/NewAddress", "Ship to new address")
                            @Html.RadioButtonFor(x => x.ShippingAddressType, 0, new
                            {
                                @class = "radio jsSingleAddress"
                            })
                            <span class="checkmark"></span>
                        </label>
                    </div>
                </div>

                <div class="col-md-6 col-xs-12">
                    <label class="checkbox">
                        @Html.Label("Use billing address as shipping address")
                        <input type="checkbox" name="UseBillingAddressForShipment" id="UseBillingAddressForShipment" @(Model.UseBillingAddressForShipment ? "checked" : "") />
                        <span class="checkmark"></span>
                    </label>
                </div>
            </li>

            <li class="@(Model.ShippingAddressType == 1 && User.Identity.IsAuthenticated ? "" : "hidden")" id="oldShippingAddressForm">
                <div class="form-group">

                    @{
                        var values = new List<KeyValuePair<string, string>>();
                        foreach (var a in Model.AvailableAddresses)
                        {
                            values.Add(new KeyValuePair<string, string>(a.Name, a.AddressId));
                        }
                    }
                    @{
                        var defaultShippingAddress = Model.AvailableAddresses.FirstOrDefault(x => x.ShippingDefault);
                        var defaultShippingAddressId = defaultShippingAddress != null ? defaultShippingAddress.AddressId : null;
                    }
                    @Helpers.RenderDropdown(values, Model.Shipments[0].Address.AddressId ?? defaultShippingAddressId, "", "Shipments[0].Address.AddressId")

                </div>
            </li>

            <li class="@(Model.ShippingAddressType == 1 && User.Identity.IsAuthenticated ? "hidden" : "")" id="newShippingAddressForm">
                @Html.HiddenFor(model => model.Shipments[0].Address.Name)
                @Html.HiddenFor(model => model.Shipments[0].Address.DaytimePhoneNumber)
                @Html.HiddenFor(model => model.Shipments[0].Address.BillingDefault)
                @Html.HiddenFor(model => model.Shipments[0].Address.ShippingDefault)
                <ul class="style-list-none">
                    <li>
                        <div class="row">
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.FirstName)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.FirstName, new
                           {
                               @class = "textbox"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.FirstName)
                            </div>

                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.LastName)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.LastName, new
                           {
                               @class = "textbox"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.LastName)
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="row">
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.Email)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.Email, new
                           {
                               @class = "textbox"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.Email)
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.Organization)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.Organization, new
                           {
                               @class = "textbox"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.Organization)
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="row">
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.Line1)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.Line1, new
                           {
                               @class = "textbox"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.Line1)
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.Line2)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.Line2, new
                           {
                               @class = "textbox"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.Line2)
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="row">
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.City)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.City, new
                           {
                               @class = "textbox jsChangeTaxAddress"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.City)
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.PostalCode)
                                @Html.TextBoxFor(model => model.Shipments[0].Address.PostalCode, new
                           {
                               @class = "textbox jsChangeTaxAddress"
                           })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.PostalCode)
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="row">
                            <div class="form-group col-xs-12 col-md-6 jsCountryRegionContainer">
                                @Html.EditorFor(model => model.Shipments[0].Address.CountryRegion, new { SelectItem = Model.Shipments[0].Address.CountryRegion.Region, Name = "Shipments[0].Address.CountryRegion.Region" })
                            </div>
                            <div class="form-group col-xs-12 col-md-6">
                                @Html.LabelFor(model => model.Shipments[0].Address.CountryCode)
                                @Html.DisplayFor(model => model.Shipments[0].Address.CountryOptions, "CountryOptions",
                                    new { SelectItem = Model.Shipments[0].Address.CountryCode, Name = "Shipments[0].Address.CountryCode" })
                                @Html.ValidationMessageFor(model => model.Shipments[0].Address.CountryCode)
                                @Html.Hidden("address-htmlfieldprefix", "Shipments[0].Address.CountryRegion")
                            </div>
                        </div>
                    </li>
                </ul>
            </li>

        </ul>

        @if (ViewData.ModelState["Shipments[0].Address.AddressId"] != null && ViewData.ModelState["Shipments[0].Address.AddressId"].Errors.Count > 0)
        {
            <div class="address-required-message alert alert-danger square-box">
                <h6>Shipping Addresses is required!</h6>
            </div>
        }

    </div>
</div>

