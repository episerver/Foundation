@using EPiServer.Find
@using Foundation.Features.Locations.LocationListPage

@model LocationListViewModel

@{
    var filterString = Model.QueryString["a"];
    var filterActivities = Enumerable.Empty<string>();
    if (!string.IsNullOrWhiteSpace(filterString))
    {
        filterActivities = filterString.Split(',').ToList();
    }
}

<div class="filterblock" data-filtertype="a" id="activity-filter">
    <h4>
        <i class="fa fa-tags"></i>
        @(string.IsNullOrEmpty(ViewData["FilterTitle"].ToString()) ? Html.TranslateFallback("/Locations/Activities", "Activities") : ViewData["FilterTitle"].ToString())
    </h4>
    <ul class="portfolio-cats">
        <li>
            <span>
                <label>
                    <input class="select-all" type="checkbox" @(!filterActivities.Any() ? "checked=checked" : "")>
                    <strong>
                        @(string.IsNullOrEmpty(ViewData["AllConditionText"].ToString()) ? Html.TranslateFallback("/Locations/AllActivities", "All activities") : ViewData["AllConditionText"].ToString())
                    </strong>
                </label>
            </span>
        </li>
        @foreach (var category in Model.Locations.TermsFacetFor(x => x.TagString()))
        {
            <li>
                <span>
                    <label for="a-@category.Term">
                        <input class="select-some" type="checkbox" id="a-@category.Term" value="@HttpUtility.UrlEncode(category.Term)"
                               @(filterActivities.Contains(category.Term) ? "checked=checked" : "")>
                        @category.Term (@category.Count)
                    </label>
                </span>
            </li>
        }
    </ul>
</div>