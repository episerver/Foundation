@using Foundation.Helpers

@model IBlockViewModel<HeroBlock>

@{
    var blockPaddings = Model.CurrentBlock.PaddingStyles;

    var calloutPaddingUnit = Model.CurrentBlock.Callout.PaddingUnit;

    var calloutPaddings = "padding: "
        + Model.CurrentBlock.Callout.PaddingTop + calloutPaddingUnit + " "
        + Model.CurrentBlock.Callout.PaddingRight + calloutPaddingUnit + " "
        + Model.CurrentBlock.Callout.PaddingBottom + calloutPaddingUnit + " "
        + Model.CurrentBlock.Callout.PaddingLeft + calloutPaddingUnit + ";";

    var calloutTextColor = string.Empty;
    if (Model.CurrentBlock.Callout.CalloutTextColor.Equals("Light"))
    {
        calloutTextColor = "color: white";
    }
    else if (Model.CurrentBlock.Callout.CalloutTextColor.Equals("Dark"))
    {
        calloutTextColor = "color: black";
    }
}

<div blockId="@(((IContent)Model.CurrentBlock).ContentLink.ID)" id="heroBlock-@(((IContent)Model.CurrentBlock).ContentLink.ID)" name="@(((IContent)Model.CurrentBlock).Name)" style="@blockPaddings">
    <div class="hero-block">
        <div class="hero-block__image" style="background-image: url('@Url.WebPFallbackImageUrl(Model.CurrentBlock.BackgroundImage, 1440, null)'">
        </div>
        <div class="hero-block__video">
            <video autoplay loop playsinline muted>
                <source src="@Url.ContentUrl(Model.CurrentBlock.MainBackgroundVideo)" type="video/mp4">
            </video>
        </div>
        <div class="hero-block__overlay" style="opacity: @Model.CurrentBlock.BlockOpacity"></div>
        <div class="hero-block__callout" style="justify-content: @Model.CurrentBlock.Callout.CalloutPosition;">
            @if (!Url.ContentUrl(Model.CurrentBlock.Link).IsEmpty() && Model.CurrentBlock.MainBackgroundVideo == null)
            {
                <div class="hero-block-link" onclick="location.href='@Url.ContentUrl(Model.CurrentBlock.Link)'"></div>
            }
            <div class="callout" style="@calloutPaddings; @calloutTextColor; text-align: @Model.CurrentBlock.Callout.CalloutContentAlignment;
                background-color: @Model.CurrentBlock.Callout.BackgroundColor; opacity: @Model.CurrentBlock.Callout.CalloutOpacity;">
                @Html.PropertyFor(m => m.CurrentBlock.Callout)
            </div>
        </div>
    </div>
</div>