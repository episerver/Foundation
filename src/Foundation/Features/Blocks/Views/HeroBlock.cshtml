@using Foundation.Helpers

@model IBlockViewModel<HeroBlock>

@{
    var blockPaddings = "padding: "
        + Model.CurrentBlock.PaddingTop + "px "
        + Model.CurrentBlock.PaddingRight + "px "
        + Model.CurrentBlock.PaddingBottom + "px "
        + Model.CurrentBlock.PaddingLeft + "px;";

    var calloutPaddings = "padding: "
        + Model.CurrentBlock.Callout.PaddingTop + "px "
        + Model.CurrentBlock.Callout.PaddingRight + "px "
        + Model.CurrentBlock.Callout.PaddingBottom + "px "
        + Model.CurrentBlock.Callout.PaddingLeft + "px;";

    var colorStyle = "";
    var calloutTextColor = Model.CurrentBlock.Callout.CalloutTextColor;

    if (!string.IsNullOrEmpty(calloutTextColor))
    {
        if (calloutTextColor.Equals("Light"))
        {
            colorStyle = "color: white;";
        }
        else
        {
            colorStyle = "color: black;";
        }
    }
}

<div blockId="@(((IContent)Model.CurrentBlock).ContentLink.ID)" id="heroBlock-@(((IContent)Model.CurrentBlock).ContentLink.ID)" name="@(((IContent)Model.CurrentBlock).Name)" class="hero-block" style="@blockPaddings">
    <div class="hero-block__teaser">
        @if (!Url.ContentUrl(Model.CurrentBlock.Link).IsEmpty())
        {
            <div @Html.EditAttributes(x => x.CurrentBlock.BackgroundImage) class="hero-block__link hero-block__image"
                 style="background-image: url('@Url.WebPFallbackImageUrl(Model.CurrentBlock.BackgroundImage, 1440, null)'"
                 onclick="location.href='@Url.ContentUrl(Model.CurrentBlock.Link)'">
            </div>
        }
        else if (Model.CurrentBlock.MainBackgroundVideo != null)
        {
            <div @Html.EditAttributes(x => x.CurrentBlock.BackgroundImage) class="hero-block__image" style="background-image: url('@Url.ContentUrl(Model.CurrentBlock.BackgroundImage)'">
                <video class="hero-block__video" autoplay loop playsinline muted>
                    <source src="@Url.ContentUrl(Model.CurrentBlock.MainBackgroundVideo)" type="video/mp4">
                </video>
            </div>
        }
        else
        {
            <div @Html.EditAttributes(x => x.CurrentBlock.BackgroundImage) class="hero-block__image" style="background-image: url('@Url.WebPFallbackImageUrl(Model.CurrentBlock.BackgroundImage, 1440, null)'">
            </div>
        }
    </div>
    <div class="hero-block__callout @(string.IsNullOrEmpty(Model.CurrentBlock.Callout.BackgroundColor)? "" : "transparent-callout")" id="blockCallout" style="@calloutPaddings @colorStyle">
        @Html.PropertyFor(m => m.CurrentBlock.Callout)
    </div>
    <style>
            #heroBlock-@(((IContent)Model.CurrentBlock).ContentLink.ID) .hero-block__image:after {
                background: black;
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: @Model.CurrentBlock.BlockOpacity;
            }

            #heroBlock-@(((IContent)Model.CurrentBlock).ContentLink.ID) .callout:after {
                background: @(string.IsNullOrEmpty(Model.CurrentBlock.Callout.BackgroundColor) ? "none" : Model.CurrentBlock.Callout.BackgroundColor);
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: @Model.CurrentBlock.Callout.Opacity;
            }
    </style>
</div>