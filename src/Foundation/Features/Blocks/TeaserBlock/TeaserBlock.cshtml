@using Foundation.Features.Blocks.TeaserBlock

@model IBlockViewModel<TeaserBlock>

@Html.FullRefreshPropertiesMetaData(new[] { "Image" })
@{
    string imagePosition, headingPosition, descriptionPosition;

    switch (Model.CurrentBlock.ElementsOrder)
    {
        case "ImageHeadingDescriptionText":
            imagePosition = "order: 0";
            headingPosition = "order: 1";
            descriptionPosition = "order: 2";
            break;
        case "ImageDescriptionHeadingText":
            imagePosition = "order: 0";
            descriptionPosition = "order: 1";
            headingPosition = "order: 2";
            break;
        case "HeadingImageDescriptionText":
            headingPosition = "order: 0";
            imagePosition = "order: 1";
            descriptionPosition = "order: 2";
            break;
        case "HeadingDescriptionImageText":
            headingPosition = "order: 0";
            descriptionPosition = "order: 1";
            imagePosition = "order: 2";
            break;
        case "DescriptionImageHeadingText":
            descriptionPosition = "order: 0";
            imagePosition = "order: 1";
            headingPosition = "order: 2";
            break;
        case "DescriptionHeadingImageText":
            descriptionPosition = "order: 0";
            headingPosition = "order: 1";
            imagePosition = "order: 2";
            break;
        default:
            imagePosition = string.Empty;
            headingPosition = string.Empty;
            descriptionPosition = string.Empty;
            break;
    }
}

@using (Html.BeginConditionalLink(!ContentReference.IsNullOrEmpty(Model.CurrentBlock.Link),
    Url.PageLinkUrl(Model.CurrentBlock.Link),
    Model.CurrentBlock.Heading))
{
    <div class="teaser-block @(Model.CurrentBlock.Padding + " " + Model.CurrentBlock.Margin)" style="@Model.CurrentBlock.ElementsAlignment; background-color: @Model.CurrentBlock.BackgroundColor; @Model.CurrentBlock.TextColor; opacity:@Model.CurrentBlock.BlockOpacity;">
        @if (!ContentReference.IsNullOrEmpty(Model.CurrentBlock.Image))
        {
            <div @Html.EditAttributes(x => x.CurrentBlock.Image) class="teaser-block__image" style="@imagePosition; @Model.CurrentBlock.ElementsAlignment">
                <picture class="img-fluid">
                    <source data-srcset="@Url.ContentUrl(Model.CurrentBlock.Image)?format=webp" type="image/webp">
                    <img class="img-fluid lazyload" style="width: @(Model.CurrentBlock.ImageSize)%" data-src="@Url.ContentUrl(Model.CurrentBlock.Image)" loading="lazy" />
                </picture>
            </div>
        }
        <h2 class="teaser-block__heading" style="@headingPosition; font-size: @(Model.CurrentBlock.HeadingSize)px; @Model.CurrentBlock.HeadingStyle" @Html.EditAttributes(x => x.CurrentBlock.Heading)>@Model.CurrentBlock.Heading</h2>
        @if (!Model.CurrentBlock.Description.IsNullOrEmpty())
        {
            <div class="teaser-block__description" style="@descriptionPosition" @Html.EditAttributes(x => x.CurrentBlock.Description)>@Model.CurrentBlock.Description</div>
        }
        @if (Model.CurrentBlock.Text != null)
        {
            <div class="teaser-block__text" style="order: 4">@Html.PropertyFor(m => m.CurrentBlock.Text)</div>
        }
    </div>
}